[user]
	name = u1and0
	email = e01.ando60@gmail.com
[color]
	ui = true
	diff = auto
	status = auto
	branch = auto
	interactive = true
[core]
	autoCRLF = false
	whitespace = cr-at-eol
	excludesfile = ~/.globalgitignore
	symlinks = true
	quotepath = false
    pager = "type diff-so-fancy >/dev/null 2>&1 && PG='diff-so-fancy' || PG='cat'; $PG | less --tabs=4 -RFX"
	# preloadindex = true  # <windows用>インデックスの比較を並列実行してくれてgit statusなどを高速化
	# fscache = true  # <windows用>ユーザーディレクトリへのアクセスではなくシステム領域にキャッシュを書き込む
[pack]
	packSizeLimit = 2g
[diff]
	renames = true
[diff "word"]
    textconv = catdoc
[diff "wordx"]
    textconv = ~/.config/git/docx2txt.sh
[rebase]
	autosquash = true
[gui]
	encoding = utf-8
[alias]
	# ========Useful========
	sort = for-each-ref --sort=committerdate refs/ --format='%(HEAD) %(color:red)%(refname:short)%(color:reset) - %(color:yellow)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'  # Display branch info
	alias = config --get-regexp alias.*  # Display alias list
	zip = !git archive --format=zip HEAD > `git symbolic-ref --short HEAD`.zip  # Archive HEAD as zip
	# ========add, commit, push========
	aa = !git add .
	an = !git add -n .
	aundo = reset HEAD
	ac = commit -am
	c = commit -m
	cundo = commit --amend
	po = push origin
    delete = push --delete origin
	# ========diff========
	difff = !git diff --word-diff
	dif = !git diff --stat
	# ========branch========
	b = branch
	# ========log========
	log0 = !git log --all --oneline
	log1 = !git log --all --graph --date=relative --date-order --format=format:'%C(yellow)%h %C(bold green)%ar %C(reset)%s %C(auto)%d %C(reset)'
	log2 = !git log --all --graph --stat --pretty=format:'%C(yellow)%h %C(cyan)%cd %C(bold black)%an %C(auto)%d %n %C(reset)%s' --date=format:'%Y-%m-%d %H:%M:%S'
	log3 = !git log --all --patch-with-stat --date=format:'%Y-%m-%d %H:%M:%S' --pretty='format:%C(yellow)%H %C(bold cyan)[%cd] %C(bold black)%an %C(auto)%d% %C(reset)%n %s'
	last = !git log0 $(git tag | tail -1)..  # Latest tag
	today = !git log1 --since='yesterday'  # todays work
	# ========submodule========
	sdiff = !"git diff && git submodule foreach 'git diff'"
	spush = push --recurse-submodules=on-demand
	supdate = submodule update --remote --merge
    zcheckout = "!f() { args=$@; if [ -z \"$args\" ]; then branch=$(git branch --all | grep -v HEAD | fzf --preview 'echo {} | cut -c 3- | xargs git log --color=always' | cut -c 3-); git checkout $(echo $branch | sed 's#remotes/[^/]*/##'); else git checkout $args; fi }; f"
    zdiff = "!f() { args=$@; [ -z \"$args\" ] && args=HEAD; ([ \"$args\" = \"HEAD\" ] && git status --short || git diff --name-status $args | sed 's/\t/  /') | fzf --preview \"echo {} | cut -c 4- | xargs git diff --color=always $args --\" --multi --height 90% | cut -c 4-; }; f"
    zstashlist = !git stash list | fzf --preview 'echo {} | grep -o stash@{.*} | xargs git stash show -p --color=always' --height 90% | grep -o stash@{.*}
[push]
	default = upstream
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[color "diff"]
	meta = yellow
	frag = magenta bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
[fetch]
	prune = true
[merge]
	ff = false
[pull]
	ff = only
[ghq]
	root = /root/go/src
# [remote "origin"]  # この設定はdockerでテストする時引っかかることがあるので、つけてはいけない
	# fetch = +refs/heads/*:refs/remotes/origin/*
# deinのプラグインを更新する時、複数のブランチで更新することが許されていないため
# [dein] fatal: multiple updates for ref 'refs/remotes/origin/master' not allowed
#
# git fetchで自分のdotファイルを落としたい時、on the flyでこのセッションだけ有効なfetchオプションを設定する
# git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
[commit]
	template = ~/.gitmessage
[init]
	defaultBranch = main
