#!/usr/bin/zsh
# shell scriptを3回実行し、実行時間を平均して表示
# USAGE:
#   timeit [command] <args>
function timeit() {
    for i ($(seq 3)) time sh -c "$*" > /dev/null 2>&1
}

# tmux login
function is_exists() { type "$1" >/dev/null 2>&1; return $?; }
function is_screen_running() { [ ! -z "$STY" ]; }
function is_tmux_runnning() { [ ! -z "$TMUX" ]; }
function is_screen_or_tmux_running() { is_screen_running || is_tmux_runnning; }
function shell_has_started_interactively() { [ ! -z "$PS1" ]; }
function is_ssh_running() { [ ! -z "$SSH_CONECTION" ]; }

function tmux_automatically_attach_session()
{
    if is_screen_or_tmux_running; then
        ! is_exists 'tmux' && return 1

        if is_tmux_runnning; then
            echo -e "Entering tmux session"
        elif is_screen_running; then
            echo "This is on screen."
        fi
    else
        if shell_has_started_interactively && ! is_ssh_running; then
            if ! is_exists 'tmux'; then
                echo 'Error: tmux command not found' 2>&1
                return 1
            fi

            if tmux has-session >/dev/null 2>&1; then
                # detached session exists
                if tmux list-sessions; then
					echo -n "Tmux: attach? ([Y]/n/neW/num) "
					read
					if [[ "$REPLY" == [Nn] ]]; then
                        return 0
					elif [[ "$REPLY" == [wW] ]]; then
                        tmux new-session && echo "tmux created new session"
					elif [[ "$REPLY" == [0-9]* ]]; then
						tmux attach-session -d -t "$REPLY"
						if [ $? -eq 0 ]; then
							echo "$(tmux -V) attached session"
							return 0
						fi
                    else
						tmux attach-session -d
						if [ $? -eq 0 ]; then
							echo "$(tmux -V) attached session"
							return 0
						fi
					fi
				fi
            fi
        fi
    fi
}
tmux_automatically_attach_session

# fzf
function fuzzy-command-search(){
    print -z -- $(compgen -abc | fzf)
}
zle -N fuzzy-command-search
bindkey -M viins '^G'  fuzzy-command-search
# vim:ft=zsh
